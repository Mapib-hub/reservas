server {
  listen 80;
  server_name localhost; # O el nombre que uses
  resolver 127.0.0.11 valid=10s;
  # Sirve los archivos estáticos de React
  location / {
    root /usr/share/nginx/html; # O donde estén tus archivos de build
    index index.html index.htm;
    try_files $uri $uri/ /index.html; # Importante para Single Page Apps
  }
 
  # Redirige las llamadas API al backend
  location ~ ^/api/(.*)$ { # Usa regex para capturar lo que viene después de /api/
    proxy_pass http://servidor:4000/$1; # 'servidor' es el nombre del servicio backend en docker-compose
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
  location ~ ^/public/(.*)$ {
         # Reenvía a http://servidor:4000/public/...
         # (Asegúrate que tu backend sirve estas rutas desde /public/)
         proxy_pass http://servidor:4000/public/$1;
         proxy_set_header Host $host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
         proxy_set_header X-Forwarded-Proto $scheme;
    }
   # NUEVO BLOQUE para las imágenes (o la ruta que uses)
  location /uploads/ {
    proxy_pass http://servidor:4000; # Redirige al backend
    # Puedes añadir headers aquí también si son necesarios
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
  # Puedes añadir otras configuraciones aquí (logs, etc.)
}

